# name: Flask App Tests

# #The workflow will run every time when a 
# #pull request is made on main branch 

# on:
#     pull_request:
#         branches:
#             - main

# jobs:
#     test:
#         runs-on: ubuntu-latest
#         defaults:
#             run:
#                 working-directory: ./app/
#         strategy:
#             matrix:
#                 python-version: [3.13.1]
#         env:
#             MODE: ${{ secrets.MODE }}

#         steps:
#             - uses: actions/checkout@v3 # Predefined scripts 
            
#             - name: Set up Python
#               uses: actions/setup-python@v4
#               with:
#                 python-version: ${{ matrix.python-version }} # Is taking versions defined in 'matrix' in 'strategy' step

#             - name: Install dependencies
#               run: |
#                 python -m pip install --upgrade pip
#                 pip install -r ../requirements.txt
                
#             - name: Test App Code
#               run: python ./main_test.py

name: Publikacja pakietu

on:
  push:
    branches:
      - test

jobs:

#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
    
#     - name: Konfiguracja Pythona
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.10'
    
#     - name: Instalacja zależności
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r ../requirements.txt
    
#     - name: Testowanie
#       run: python -m unittest discover -s ../tests -p '*_test.py'

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Konfiguracja Pythona
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Instalacja zależności
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt
        pip install build twine
    
    - name: Budowanie pakietu
      run: python -m build
      
    # - name: Publikacja do PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}
    
    - name: Zapisz pliki dystrybucyjne jako artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: dist/
        retention-days: 90